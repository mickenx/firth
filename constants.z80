MEM_SIZE        EQU     $10000 ; MEM is 64K
ROM_SIZE        EQU     $2000 ; ROM is 8K
RAM_SIZE        EQU     MEM_SIZE - ROM_SIZE ; RAM is 64K - 8K

BM              EQU     0 ; bottom of ROM memory
EM              EQU     BM + MEM_SIZE 

START_ROM       EQU     BM ; inclusive
END_ROM         EQU     BM + ROM_SIZE ; exclusive

START_RAM       EQU     BM + ROM_SIZE ; inclusive
END_RAM         EQU     START_RAM + RAM_SIZE ; exclusive

RET_STACK_SIZE  equ     $100 ; return stack
DATA_STACK_SIZE equ     $100 ; data stack
PAD_SIZE        equ     $100 ; user scratch pad

SER_BUFSIZE     equ     3FH
SER_FULLSIZE    equ     30H
SER_EMPTYSIZE   equ     5
LINE_BUFSIZE    equ     128

IO_DATA         equ     $81
IO_CTRL         equ     $80

IMMED           equ     $80
HIDE            equ     $40
LENMASK         equ     $3f ; length mask

CALL_OPCODE     equ     $CD
JP_OPCODE       equ     $C3
LD_HL_OPCODE    equ     $21
POP_HL_OPCODE   equ     $E1
RET_OPCODE      equ     $C9
RST08_OPCODE    equ     $CF                 ; call enter

RTS_HIGH        equ     0D6H                ; 11010110
RTS_LOW         equ     096H                ; 10010110
SIOA_D          .EQU    32 ;$00
SIOA_C          .EQU    33; $02
SIOB_D          .EQU    34 ;$01
SIOB_C          .EQU    35 ;$03

